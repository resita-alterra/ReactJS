{"ast":null,"code":"var _jsxFileName = \"/home/alta13/Documents/CLI/Hari1/alta3_13_resita/Fase 2/ReactJS/global_storage/my-app/src/pages/Counter.js\";\nimport React from \"react\";\nimport createStore from \"unistore\";\nimport { connect } from \"tls\";\nlet store = createStore({\n  count: 0,\n  judul: \"\"\n});\n\nlet actions = store => ({\n  increment(state) {\n    return {\n      count: state.count + 1\n    };\n  }\n\n});\n\nexport let Counter = connect(\"count\", actions)(({\n  count,\n  increment\n}) => React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"Count : \", count), React.createElement(\"button\", {\n  onClick: increment,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Test\")));","map":{"version":3,"sources":["/home/alta13/Documents/CLI/Hari1/alta3_13_resita/Fase 2/ReactJS/global_storage/my-app/src/pages/Counter.js"],"names":["React","createStore","connect","store","count","judul","actions","increment","state","Counter"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,UAAxB;AACA,SAASC,OAAT,QAAwB,KAAxB;AAEA,IAAIC,KAAK,GAAGF,WAAW,CAAC;AAAEG,EAAAA,KAAK,EAAE,CAAT;AAAYC,EAAAA,KAAK,EAAE;AAAnB,CAAD,CAAvB;;AAEA,IAAIC,OAAO,GAAGH,KAAK,KAAK;AACtBI,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,WAAO;AAAEJ,MAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,GAAc;AAAvB,KAAP;AACD;;AAHqB,CAAL,CAAnB;;AAMA,OAAO,IAAIK,OAAO,GAAGP,OAAO,CAC1B,OAD0B,EAE1BI,OAF0B,CAAP,CAGnB,CAAC;AAAEF,EAAAA,KAAF;AAASG,EAAAA;AAAT,CAAD,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAcH,KAAd,CADF,EAEE;AAAQ,EAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,CAJmB,CAAd","sourcesContent":["import React from \"react\";\n\nimport createStore from \"unistore\";\nimport { connect } from \"tls\";\n\nlet store = createStore({ count: 0, judul: \"\" });\n\nlet actions = store => ({\n  increment(state) {\n    return { count: state.count + 1 };\n  }\n});\n\nexport let Counter = connect(\n  \"count\",\n  actions\n)(({ count, increment }) => (\n  <div>\n    <div>Count : {count}</div>\n    <button onClick={increment}>Test</button>\n  </div>\n));\n"]},"metadata":{},"sourceType":"module"}